import Category from "@/components/Category";
import HeroBanner from "@/components/HeroBanner";
import Navbar from "@/components/Navbar";
import Row from "@/components/Row";
import { ICart, IProduct } from "@/interface";
import { Inter } from "next/font/google";
import Head from "next/head";

const inter = Inter({ subsets: ["latin"] });
interface Props {
  products: ICart[];
  womenCloths: ICart[];
  jewelry: ICart[];
  categories: any;
}

export default function Home({
  products,
  categories,
  jewelry,
  womenCloths,
}: Props) {
  return (
    <div>
      <Head>
        <title>Marshop</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* Navbar */}
      <Navbar />
      {/* Hero Banner */}
      <section>
        <HeroBanner />
      </section>

      {/* Popular Product */}
      <section className="md:px-4 lg:px-44 mt-12">
        <Row title="Popular Product" products={products} />
      </section>
      {/* <Category /> */}
      <section className="mt-12">
        <Category title="Top Categories" categories={categories} />
      </section>

      {/* Best Deals */}
      <section className="md:px-4 lg:px-44 mt-12 flex flex-col gap-6">
        <Row
          title="Women's Clothing"
          products={womenCloths.concat(womenCloths)}
        />
        <Row
          title="Jewelry"
          products={jewelry.concat(jewelry).concat(jewelry)}
        />
      </section>
    </div>
  );
}

export async function getServerSideProps() {
  const products = await fetch("https://fakestoreapi.com/products").then(
    (res) => res.json()
  );
  const womenCloths = await fetch(
    "https://fakestoreapi.com/products/category/women's clothing"
  ).then((res) => res.json());

  const jewelry = await fetch(
    "https://fakestoreapi.com/products/category/jewelery"
  ).then((res) => res.json());

  const categories = products
    .map((product: IProduct) => product.category)
    .filter(
      (value: string, index: number, self: string) =>
        self.indexOf(value) === index
    );

  return {
    props: {
      products: products,
      categories: categories,
      womenCloths: womenCloths,
      jewelry: jewelry,
    },
  };
}
